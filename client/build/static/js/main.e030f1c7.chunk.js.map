{"version":3,"sources":["apis/AuthApi.js","services/AuthSession.js","components/LoginForm.js","components/RegisterForm.js","components/Overlay.js","pages/LandingPage.js","routes/PrivateRoute.js","components/ProductList.js","components/customer/HeaderComponent.js","apis/ItemApi.js","apis/UserApi.js","pages/customer/HomePage.js","components/ProfileUpdateForm.js","pages/customer/ProfilePage.js","pages/customer/TransactionPage.js","pages/customer/OrderPage.js","components/customer/CartList.js","apis/BankApi.js","components/customer/PaymentForm.js","pages/customer/CartPage.js","pages/customer/MerchantPage.js","routes/CustomerRoute.js","components/merchant/HeaderComponent.js","components/merchant/AddProductForm.js","components/merchant/AddProductComponent.js","components/merchant/EditProductForm.js","components/merchant/ProductList.js","pages/merchant/HomePage.js","pages/merchant/ProfilePage.js","pages/merchant/WalletPage.js","pages/merchant/RequestPage.js","routes/MerchantRoute.js","components/admin/HeaderComponent.js","components/admin/MerchantApprovalList.js","components/admin/TransactionApprovalList.js","pages/admin/HomePage.js","routes/AdminRoute.js","routes/NotFoundRoute.js","routes/RootRoute.js","App.js","serviceWorker.js","index.js"],"names":["apiURL","process","username","password","Axios","post","this","email","userType","name","gender","token","handleCustomerRegistration","handleMerchantRegistration","handleAdminRegistration","credentials","sessionStorage","setItem","JSON","stringify","removeItem","parse","getItem","authedUser","type","id","layout","labelCol","span","wrapperCol","LoginForm","props","state","isLoading","value","setState","AuthApi","handleLogin","then","res","data","AuthSession","handleLoginSucceeded","history","push","catch","err","notification","error","message","description","duration","console","log","className","onFinish","handleLoginRequest","Item","label","rules","required","Password","htmlType","Component","withRouter","Option","Select","RegisterForm","isLoggingAsAdmin","handleRegistration","handleRegisterRequest","placeholder","onChange","handleUserTypeChange","allowClear","Group","options","Overlay","onClick","Content","Layout","LandingPage","handleOverlayClick","formHidden","loginFormHidden","registerFormHidden","handleLoginButtonClick","handleRegisterButtonClick","handleIsLoggedIn","to","getUserType","handleLoginFormSubmission","PrivateRoute","component","rest","render","ProductList","merchantInfo","pathname","productItems","productList","map","product","quantity","key","handleMerchantClick","merchantId","merchantName","price","onAddToCart","Header","HeaderComponent","info","handleLogout","theme","mode","defaultSelectedKeys","handleHomeMenuClick","handleProfileMenuClick","handleOrderMenuClick","handleTransactionMenuClick","handleCartMenuClick","src","alt","placement","title","onConfirm","okText","cancelText","itemInfo","itemId","delete","get","patch","userId","newUserInfo","put","ID","HomePage","products","isLoadingProduct","getItemsInfo","productNewState","ItemApi","handleGetItems","productData","Promise","resolve","merchantInfoPromises","UserApi","handleGetUserInfo","all","merchantData","forEach","merchant","index","productId","slice","targetProduct","find","targetProductName","success","size","handleAddToCart","ProfileUpdateForm","userInfo","getUserInfo","toLowerCase","active","newValue","handleUpdateUserInfo","initialValues","handleUpdateRequest","disabled","ProfilePage","TransactionPage","transactionData","handleGetWalletData","formatter","Intl","NumberFormat","style","currency","setTimeout","date","totalFormatted","format","toFixed","columns","dataIndex","dataSource","loading","rowKey","OrderPage","orderList","status","order","CartList","cartItems","cartList","onRemoveFromCart","PaymentForm","isLoadingBank","bankList","handleGetBanks","BankApi","banks","ref","reference","bank","CartPage","cart","removeItemModal","isVisible","payModal","paymentModalRef","React","createRef","length","newCartState","filter","reduce","acc","current","validateFields","values","totalProductPrice","calculatePaymentAmount","paymentModalFooter","handleClosePayModal","handleMakePayment","visible","centered","onOk","handleRemoveFromCart","onCancel","footer","handleOpenRemoveModal","handleOpenPayModal","Sider","path","location","merchantProducts","isLoadingMerchantInfo","isLoadingMerchantProducts","handleGetMerchantInfo","handleGetMerchantProducts","handleGetItemsByMerchant","productColumns","text","record","bind","handleWalletMenuClick","handleRequestMenuClick","AddProductForm","min","replace","parser","AddProductComponent","addModal","addProductRef","resetFields","handleCloseAddModal","Object","assign","getUserId","handleAddItem","onAddProduct","addProductFooter","handleAddProduct","handleOpenAddModal","EditProductForm","editModal","currentProductInfo","editProductFormRef","handleGetItem","productInfo","reject","finally","handleCloseEditModal","onEditProduct","transactionColumns","handleOpenEditModal","onDeleteProduct","editProductFooter","handleEditProduct","list","newItemInfo","handleUpdateItem","handleDeleteItem","handleEditItem","WalletPage","walletData","customer","amountFormatted","requestData","handleGetRequestData","MerchantApprovalList","isLoadingMerchantApproval","inactiveMerchantsList","acceptModal","rejectModal","getInactiveMerchantsInfo","handleGetUsers","usersData","user","newMerchantInfo","handleApproveMerchant","handleDeleteUser","handleMerchantApproval","handleMerchantRejection","actions","CheckOutlined","handleOpenAcceptModal","CloseOutlined","handleOpenRejectModal","Date","created_at","toDateString","TransactionApprovalList","isLoadingTransaction","count","total","getTransactionData","transactionId","newTransactionData","transaction","handleAcceptTransaction","handleRejectTransaction","NotFoundRoute","RootRoute","router","routeType","CustomerRoute","MerchantRoute","AdminRoute","exact","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e030f1c7.chunk.js","sourcesContent":["import Axios from \"axios\"\r\n\r\nclass AuthApi {\r\n    apiURL = process.env.REACT_APP_URL_AUTH\r\n\r\n    handleLogin({ username, password }) {\r\n        return Axios.post(`${this.apiURL}/login`, {\r\n            username,\r\n            password\r\n        })\r\n    }\r\n\r\n    handleRegistration({ username, email, userType, name, gender, password, token }) {\r\n        if (userType === \"customer\") {\r\n            return this.handleCustomerRegistration({ username, email, name, gender, password })\r\n        }\r\n\r\n        if (userType === \"merchant\") {\r\n            return this.handleMerchantRegistration({ username, email, name, gender, password })\r\n        }\r\n\r\n        if (userType === \"admin\") {\r\n            return this.handleAdminRegistration({ username, email, name, gender, password, token })\r\n        }\r\n    }\r\n\r\n    handleCustomerRegistration({ username, email, name, gender, password }) {\r\n        return Axios.post(`${this.apiURL}/register/customer`, {\r\n            username,\r\n            email,\r\n            password,\r\n            name,\r\n            gender\r\n          }\r\n        )\r\n    }\r\n\r\n    handleMerchantRegistration({ username, email, name, gender, password }) {\r\n        return Axios.post(`${this.apiURL}/register/merchant`, {\r\n            username,\r\n            email,\r\n            password,\r\n            name,\r\n            gender\r\n          }\r\n        )\r\n    }\r\n\r\n    handleAdminRegistration({ username, email, name, gender, password, token }) {\r\n        return Axios.post(`${this.apiURL}/register/admin`, {\r\n            username,\r\n            email,\r\n            password,\r\n            name,\r\n            gender,\r\n            token\r\n          }\r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthApi()","class AuthSession {\r\n    handleLoginSucceeded(credentials) {\r\n        sessionStorage.setItem(\"authenticatedUser\", JSON.stringify(credentials))\r\n    }\r\n\r\n    handleLoginFailed() {\r\n        sessionStorage.removeItem(\"authenticatedUser\")\r\n    }\r\n\r\n    handleLogout() {\r\n        sessionStorage.removeItem(\"authenticatedUser\")\r\n    }\r\n\r\n    handleIsLoggedIn() {\r\n        return JSON.parse(sessionStorage.getItem(\"authenticatedUser\")) !== null\r\n    }\r\n\r\n    getUserType() {\r\n        const authedUser = JSON.parse(sessionStorage.getItem(\"authenticatedUser\"))\r\n        if (!authedUser) return null\r\n        else return authedUser.type\r\n    }\r\n\r\n    getUserId() {\r\n        const authedUser = JSON.parse(sessionStorage.getItem(\"authenticatedUser\"))\r\n        if (!authedUser) return null\r\n        else return authedUser.id\r\n    }\r\n}\r\n\r\nexport default new AuthSession()","import React, { Component } from \"react\"\r\nimport { Form, Input, Button, Spin, notification } from \"antd\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withRouter } from \"react-router\"\r\n\r\nimport AuthApi from \"../apis/AuthApi\"\r\nimport AuthSession from \"../services/AuthSession\"\r\nimport \"./styles/login_register_form.css\"\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16\r\n    }\r\n}\r\n\r\nclass LoginForm extends Component {\r\n    static propTypes = {\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    handleLoginRequest(value) {\r\n        this.setState({ isLoading: true })\r\n        AuthApi.handleLogin({\r\n            username: value.username,\r\n            password: value.password\r\n        }).then(res => {\r\n            this.setState({ isLoading: false })\r\n            const { type, username, id } = res.data\r\n            AuthSession.handleLoginSucceeded({ type, username, id })\r\n            this.props.history.push(`/${type}/home`)\r\n        }).catch(err => {\r\n            this.setState({ isLoading: false })\r\n            notification.error({\r\n                message: \"Error logging in\",\r\n                description: \"There was an error in logging in\",\r\n                duration: 2.5\r\n            })\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form \r\n                {...layout}\r\n                className={this.props.className}\r\n                onFinish={(value) => this.handleLoginRequest(value)}\r\n            >\r\n                <h1>Login</h1>\r\n\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your username\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />    \r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your password\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                {\r\n                    this.state.isLoading\r\n                        ? <Spin />\r\n                        : (\r\n                            <Form.Item>\r\n                            <Button \r\n                                    type=\"primary\"\r\n                                    htmlType=\"submit\"\r\n                                    className=\"form__submit\"\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </Form.Item>\r\n                        )\r\n                }\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginForm)","import React, { Component } from \"react\"\r\nimport { Form, Input, Button, Select, Radio, Spin, notification } from \"antd\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withRouter } from \"react-router\"\r\n\r\nimport AuthApi from \"../apis/AuthApi\"\r\nimport AuthSession from \"../services/AuthSession\"\r\nimport \"./styles/login_register_form.css\"\r\n\r\nconst { Option } = Select\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16\r\n    }\r\n}\r\n\r\nclass RegisterForm extends Component {\r\n    static propTypes = {\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoggingAsAdmin: false,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    handleRegisterRequest(value) {\r\n        this.setState({ isLoading: true })\r\n        AuthApi.handleRegistration(value)\r\n            .then(res => {\r\n                this.setState({ isLoading: false })\r\n                // Get data from db later for the userType and username\r\n                const { type, username, id } = res.data\r\n                AuthSession.handleLoginSucceeded({ type, username, id })\r\n                this.props.history.push(`/${type}/home`)\r\n            }).catch(err => {\r\n                this.setState({ isLoading: false })\r\n                notification.error({\r\n                    message: \"Error registering\",\r\n                    description: \"There was an error in registering\",\r\n                    duration: 2.5\r\n                })\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n    handleUserTypeChange(value) {\r\n        if (value === \"admin\") this.setState({\r\n            isLoggingAsAdmin: true\r\n        }) \r\n        else this.setState({\r\n            isLoggingAsAdmin: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form \r\n                {...layout}\r\n                className={this.props.className}\r\n                onFinish={(value) => this.handleRegisterRequest(value)}\r\n            >\r\n                <h1>Register</h1>\r\n\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your username\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />    \r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your correct email\",\r\n                            type: \"email\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"User Type\"\r\n                    name=\"userType\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please choose your user type\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        placeholder=\"Select your user type\"\r\n                        onChange={(value) => this.handleUserTypeChange(value)}\r\n                        allowClear\r\n                    >\r\n                        <Option value=\"admin\">Admin</Option>\r\n                        <Option value=\"merchant\">Merchant</Option>\r\n                        <Option value=\"customer\">Customer</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your name\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />    \r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Gender\"\r\n                    name=\"gender\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please select your gender\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Radio.Group \r\n                        options={[\r\n                            { label: \"Male\", value: \"male\" },\r\n                            { label: \"Female\", value: \"female\" }\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your password\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Token\"\r\n                    name=\"token\"\r\n                    rules={[\r\n                        {\r\n                            required: this.state.isLoggingAsAdmin,\r\n                            message: \"Please insert your admin token\"\r\n                        }\r\n                    ]}\r\n                    className={this.state.isLoggingAsAdmin ? \"\" : \"hide\"}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                {\r\n                    this.state.isLoading\r\n                        ? <Spin />\r\n                        : (\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"form__submit\">\r\n                                    Register\r\n                                </Button>\r\n                            </Form.Item>\r\n                        )\r\n                }\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(RegisterForm)","import React from \"react\"\r\n\r\nimport \"./styles/overlay.css\"\r\n\r\nexport default function Overlay(props) {\r\n    return <div className={props.className} onClick={props.onClick}></div>\r\n}","import React, { Component } from \"react\"\r\nimport { Layout, Button } from \"antd\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nimport \"antd/dist/antd.css\"\r\nimport \"./styles/landing_page.css\"\r\nimport LoginForm from \"../components/LoginForm\"\r\nimport RegisterForm from \"../components/RegisterForm\"\r\nimport Overlay from \"../components/Overlay\"\r\nimport AuthSession from \"../services/AuthSession\"\r\n\r\nconst { Content } = Layout\r\n\r\nclass LandingPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formHidden: true,\r\n            loginFormHidden: true,\r\n            registerFormHidden: true\r\n        }\r\n    }\r\n\r\n    handleOverlayClick = () => {\r\n        this.setState({\r\n            formHidden: true,\r\n            loginFormHidden: true,\r\n            registerFormHidden: true\r\n        })\r\n    }\r\n\r\n    handleLoginButtonClick = () => {\r\n        this.setState({\r\n            formHidden: !this.state.formHidden,\r\n            loginFormHidden: !this.state.loginFormHidden,\r\n            registerFormHidden: true\r\n        })\r\n    }\r\n\r\n    handleRegisterButtonClick = () => {\r\n        this.setState({\r\n            formHidden: !this.state.formHidden,\r\n            loginFormHidden: true,\r\n            registerFormHidden: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            AuthSession.handleIsLoggedIn()\r\n                ? <Redirect to={`${AuthSession.getUserType()}/home`} />\r\n                : (\r\n                    <Layout className=\"landing-page\">\r\n                        <Content className=\"landing-page__introduction-content\">\r\n                            <h1 className=\"landing-page__introduction-content--heading\">Marketplace</h1>\r\n                            <p className=\"landing-page__introduction-content--paragraph\">Your simplest and cheapest marketplace to ever exist</p>\r\n                            <Button \r\n                                className=\"landing-page__introduction-content--register\"\r\n                                onClick={() => this.handleRegisterButtonClick()}\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                            <Button \r\n                                className=\"landing-page__introduction-content--login\" \r\n                                onClick={() => this.handleLoginButtonClick()}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Content>\r\n\r\n                        <Overlay \r\n                            className={this.state.formHidden ? \"overlay--hide\" : \"overlay\"} \r\n                            onClick={() => this.handleOverlayClick()}\r\n                        />\r\n                        \r\n                        <LoginForm \r\n                            className={\"form--login\" + (this.state.loginFormHidden ? \" form--hide\" : \"\")}\r\n                            onFinish={() => this.handleLoginFormSubmission()} \r\n                        />\r\n\r\n                        <RegisterForm\r\n                            className={\"form--register\" + (this.state.registerFormHidden ? \" form--hide\" : \"\")}\r\n                        />\r\n                    </Layout>\r\n                )\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport AuthSession from \"../services/AuthSession\"\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                    if (AuthSession.handleIsLoggedIn()) {\r\n                        return <Component {...props} />\r\n                    } else {\r\n                        return <Redirect to=\"/\" />\r\n                    }\r\n                }\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React, { Component } from \"react\"\r\nimport { Button } from \"antd\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport \"./styles/product_list.css\"\r\n\r\nclass ProductList extends Component {\r\n    static propTypes = {\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    handleMerchantClick(merchantInfo) {\r\n        this.props.history.push({\r\n            pathname: `/customer/merchant/${merchantInfo.name}`,\r\n            state: { id: merchantInfo.id }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const productItems = this.props.productList.map(product => {\r\n            if (product.quantity > 0) {\r\n                return (\r\n                    <li key={product.id} className={\"product-list__item\"}>\r\n                        <div>{product.name}</div>\r\n                        <Button \r\n                            type=\"link\"\r\n                            onClick={() => this.handleMerchantClick({\r\n                                id: product.merchantId,\r\n                                name: product.merchantName\r\n                            })}\r\n                        >\r\n                            {product.merchantName}\r\n                        </Button>\r\n                        <div>{product.price}</div>\r\n                        <div>{product.quantity}</div>\r\n                        <Button\r\n                            onClick={() => this.props.onAddToCart(product.id)}\r\n                        >\r\n                            Add to Cart\r\n                        </Button>\r\n                    </li>\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        return (\r\n            <ul className=\"product-list\">\r\n                <li className=\"product-list__title\">\r\n                    <div>Product</div>\r\n                    <div>Merchant</div>\r\n                    <div>Price</div>\r\n                    <div>Quantity</div>\r\n                </li>\r\n                {productItems}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductList)","import React, { Component } from \"react\"\r\nimport { Layout, Menu, Popconfirm, message } from \"antd\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withRouter } from \"react-router\"\r\n\r\nimport AuthSession from \"../../services/AuthSession\"\r\nimport \"./styles/header_component.css\"\r\n\r\nconst { Header } = Layout\r\n\r\nclass HeaderComponent extends Component {\r\n    static propTypes = {\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    handleHomeMenuClick() {\r\n        console.log(\"Home menu clicked\")\r\n        this.props.history.push(\"/customer/home\")\r\n    }\r\n\r\n    handleProfileMenuClick() {\r\n        console.log(\"Profile menu clicked\")\r\n        this.props.history.push(\"/customer/profile\")\r\n    }\r\n\r\n    handleOrderMenuClick() {\r\n        console.log(\"Order menu clicked\")\r\n        this.props.history.push(\"/customer/order\")\r\n    }\r\n\r\n    handleTransactionMenuClick() {\r\n        this.props.history.push(\"/customer/transaction\")\r\n    }\r\n\r\n    handleCartMenuClick() {\r\n        console.log(\"Cart menu clicked\")\r\n        this.props.history.push(\"/customer/cart\")\r\n    }\r\n\r\n    handleLogout() {\r\n        message.info(\"Logged out\")\r\n        AuthSession.handleLogout()\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <div className=\"logo\" />\r\n    \r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[`${this.props.defaultSelectedKeys}`]}>\r\n                    <Menu.Item \r\n                        key=\"1\"\r\n                        onClick={() => this.handleHomeMenuClick()}\r\n                    >\r\n                        Home\r\n                    </Menu.Item>\r\n                    <Menu.Item \r\n                        key=\"2\"\r\n                        onClick={() => this.handleProfileMenuClick()}\r\n                    >\r\n                        Profile\r\n                    </Menu.Item>\r\n                    <Menu.Item \r\n                        key=\"3\"\r\n                        onClick={() => this.handleOrderMenuClick()}\r\n                    >\r\n                        Order\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        key=\"4\"\r\n                        onClick={() => this.handleTransactionMenuClick()}\r\n                    >\r\n                        Transaction\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item \r\n                        key=\"5\" \r\n                        className=\"menu__item--right-margined\"\r\n                        onClick={() => this.handleCartMenuClick()}\r\n                    >\r\n                        <img className=\"menu__item--image\" src={process.env.PUBLIC_URL + \"/images/cart.png\"} alt=\"Cart\" />\r\n                    </Menu.Item>\r\n\r\n                    <div className=\"menu__item--not-selectable\">\r\n                        <Popconfirm \r\n                            placement=\"bottomRight\"\r\n                            title=\"Are you sure you want to logout?\"\r\n                            onConfirm={() => this.handleLogout()}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <img src={process.env.PUBLIC_URL + \"/images/logout.png\"} alt=\"Logout\" />\r\n                        </Popconfirm>\r\n                    </div>\r\n                </Menu>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderComponent)","import Axios from \"axios\"\r\n\r\nclass ItemApi {\r\n    apiURL = process.env.REACT_APP_URL_API_ITEM\r\n\r\n    handleAddItem(itemInfo) {\r\n        return Axios.post(`${this.apiURL}/item`, itemInfo)\r\n    }\r\n\r\n    handleDeleteItem(itemId) {\r\n        return Axios.delete(`${this.apiURL}/item/${itemId}`)\r\n    }\r\n\r\n    handleGetItem(itemId) {\r\n        return Axios.get(`${this.apiURL}/item/${itemId}`)\r\n    }\r\n\r\n    handleUpdateItem(itemInfo) {\r\n        return Axios.patch(`${this.apiURL}/item/${itemInfo.id}`, itemInfo)\r\n    }\r\n\r\n    handleGetItems() {\r\n        return Axios.get(`${this.apiURL}/items`)\r\n    }\r\n\r\n    handleGetItemsByMerchant(merchantId) {\r\n        return Axios.get(`${this.apiURL}/items/merchant/${merchantId}`)\r\n    }\r\n}\r\n\r\nexport default new ItemApi()","import Axios from \"axios\"\r\n\r\nclass UserApi {\r\n    apiURL = process.env.REACT_APP_URL_USER\r\n\r\n    handleGetUsers() {\r\n        return Axios.get(`${this.apiURL}`)\r\n    }\r\n\r\n    handleGetUserInfo(userId) {\r\n        return Axios.get(`${this.apiURL}/${userId}`)\r\n    }\r\n\r\n    handleUpdateUserInfo(newUserInfo) {\r\n        return Axios.put(`${this.apiURL}/${newUserInfo.ID}`, newUserInfo)\r\n    }\r\n\r\n    handleApproveMerchant(merchantInfo) {\r\n        return Axios.put(`${this.apiURL}/${merchantInfo.id}`, merchantInfo)\r\n    }\r\n\r\n    handleDeleteUser(userId) {\r\n        return Axios.delete(`${this.apiURL}/${userId}`)\r\n    }\r\n}\r\n\r\nexport default new UserApi()","import React, { Component } from \"react\"\r\nimport { Layout, notification, Spin } from \"antd\"\r\n\r\nimport ProductList from \"../../components/ProductList\"\r\nimport HeaderComponent from \"../../components/customer/HeaderComponent\"\r\nimport \"./styles/home_page.css\"\r\nimport ItemApi from \"../../apis/ItemApi\"\r\nimport UserApi from \"../../apis/UserApi\"\r\n\r\nconst { Content } = Layout\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            products: [],\r\n            isLoadingProduct: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItemsInfo()\r\n    }\r\n\r\n    getItemsInfo() {\r\n        const productNewState = []\r\n        ItemApi.handleGetItems()\r\n            .then(productData => {\r\n                if (productData.data.data === null) return Promise.resolve([])\r\n                const merchantInfoPromises = productData.data.data.map(product => {\r\n                    productNewState.push({\r\n                        id: product.id,\r\n                        name: product.name,\r\n                        price: product.price,\r\n                        quantity: product.quantity\r\n                    })\r\n                    return UserApi.handleGetUserInfo(product[\"merchant_id\"])\r\n                })\r\n                return Promise.all(merchantInfoPromises)\r\n            })\r\n            .then(merchantData => {\r\n                merchantData.forEach((merchant, index) => {\r\n                    productNewState[index].merchantName = merchant.data.name\r\n                    productNewState[index].merchantId = merchant.data.id\r\n                })\r\n                this.setState({\r\n                    products: productNewState,\r\n                    isLoadingProduct: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    } \r\n\r\n    handleAddToCart(productId) {\r\n        const productNewState = this.state.products.slice()\r\n        const targetProduct = productNewState.find(product => product.id === productId)\r\n        const targetProductName = targetProduct.name\r\n        targetProduct.quantity -= 1\r\n        this.setState(productNewState)\r\n        notification.success({\r\n            message: `Product has been added to cart`,\r\n            description: `Product with name \"${targetProductName}\" added`,\r\n            duration: 1.5\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"home-page\">\r\n                <HeaderComponent defaultSelectedKeys={1} />                \r\n                <Content>\r\n                    <h1>Products for Sale</h1>\r\n                    {\r\n                        this.state.isLoadingProduct\r\n                            ? <Spin size=\"large\" />\r\n                            : (\r\n                                <ProductList \r\n                                    productList={this.state.products} \r\n                                    onAddToCart={(productId) => this.handleAddToCart(productId)}\r\n                                />\r\n                            )\r\n                    }\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage","import React, { Component } from \"react\"\r\nimport { Form, Input, Button, Radio, notification, Spin, message } from \"antd\"\r\n\r\nimport \"./styles/profile_update_form.css\"\r\nimport UserApi from \"../apis/UserApi\"\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16\r\n    }\r\n}\r\n\r\nexport default class ProfileUpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userInfo: { },\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserInfo()\r\n    }\r\n\r\n    getUserInfo() {\r\n        const authedUser = JSON.parse(sessionStorage.getItem(\"authenticatedUser\"))\r\n        const userId = authedUser.id\r\n        return UserApi.handleGetUserInfo(userId)\r\n            .then(res => {\r\n                this.setState({\r\n                    userInfo: {\r\n                        id: userId,\r\n                        username: res.data.username,\r\n                        name: res.data.name,\r\n                        gender: res.data.gender.toLowerCase(),\r\n                        email: res.data.email,\r\n                        type: res.data.type,\r\n                        active: res.data.active\r\n                    }\r\n                })\r\n                this.setState({\r\n                    isLoading: false\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n                notification.error({\r\n                    message: \"There was an error retrieving your data\",\r\n                    duration: 2\r\n                })\r\n            })\r\n    }\r\n\r\n    handleUpdateRequest(value) {\r\n        const newValue = {\r\n            ID: this.state.userInfo.id,\r\n            username: this.state.userInfo.username,\r\n            email: value.email,\r\n            password: value.password,\r\n            name: value.name,\r\n            gender: value.gender,\r\n            type: this.state.userInfo.type,\r\n            active: this.state.userInfo.active\r\n        }\r\n        \r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        UserApi.handleUpdateUserInfo(newValue)\r\n            .then(res => {\r\n                message.success(\"Profile updated\")\r\n                return this.getUserInfo()\r\n            }).then(res => {\r\n                this.setState({\r\n                    isLoading: false\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n                message.error(\"Profile failed to be updated\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.isLoading\r\n                ? <Spin size=\"large\" />\r\n                : (\r\n                    <Form \r\n                        {...layout}\r\n                        className={this.props.className}\r\n                        initialValues={this.state.userInfo}\r\n                        onFinish={(value) => this.handleUpdateRequest(value)}\r\n                    >\r\n                        <h1>Update Profile</h1>\r\n\r\n                        <Form.Item\r\n                            label=\"ID\"\r\n                            name=\"id\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your ID\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input disabled={true} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your username\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input disabled={true} />    \r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your name\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />    \r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your email\",\r\n                                    type: \"email\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Gender\"\r\n                            name=\"gender\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please select your gender\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Radio.Group \r\n                                options={[\r\n                                    { label: \"Male\", value: \"male\" },\r\n                                    { label: \"Female\", value: \"female\" }\r\n                                ]}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your password\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Token\"\r\n                            name=\"token\"\r\n                            rules={[\r\n                                {\r\n                                    required: this.state.isLoggingAsAdmin,\r\n                                    message: \"Please insert your admin token\"\r\n                                }\r\n                            ]}\r\n                            className={this.state.isLoggingAsAdmin ? \"\" : \"hide\"}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"form__submit\">\r\n                                Update\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Layout } from \"antd\"\r\n\r\nimport HeaderComponent from \"../../components/customer/HeaderComponent\"\r\nimport ProfileUpdateForm from \"../../components/ProfileUpdateForm\"\r\n\r\nconst { Content } = Layout\r\n\r\nclass ProfilePage extends Component {\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <HeaderComponent defaultSelectedKeys={2} />\r\n                <Content>\r\n                    <ProfileUpdateForm />\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfilePage","import React, { Component } from \"react\"\r\nimport { Layout, Table } from \"antd\"\r\n\r\nimport HeaderComponent from \"../../components/customer/HeaderComponent\"\r\n\r\nconst { Content } = Layout\r\n\r\nexport default class TransactionPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: true,\r\n            transactionData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetWalletData()\r\n    }\r\n\r\n    handleGetWalletData() {\r\n        const formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isLoading: false,\r\n                transactionData: [\r\n                    {\r\n                        date: \"Mon 25 Sep 2020\",\r\n                        product: \"RAM\",\r\n                        merchant: \"merchantsir\",\r\n                        quantity: 1,\r\n                        totalFormatted: formatter.format((150000).toFixed(0))\r\n                    },\r\n                    {\r\n                        date: \"Tue 26 Sep 2020\",\r\n                        product: \"Camera\",\r\n                        merchant: \"merchantsir\",\r\n                        quantity: 1,\r\n                        totalFormatted: formatter.format((1000000).toFixed(0))\r\n                    }\r\n                ]\r\n            })\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        const transactionColumns = [\r\n            {\r\n                title: \"Date\",\r\n                dataIndex: \"date\",\r\n                key: \"date\"\r\n            },\r\n            {\r\n                title: \"Product\",\r\n                dataIndex: \"product\",\r\n                key: \"product\"\r\n            },\r\n            {\r\n                title: \"Merchant\",\r\n                dataIndex: \"merchant\",\r\n                key: \"merchant\"\r\n            },\r\n            {\r\n                title: \"Quantity\",\r\n                dataIndex: \"quantity\",\r\n                key: \"quantity\"\r\n            },\r\n            {\r\n                title: \"Total\",\r\n                dataIndex: \"totalFormatted\",\r\n                key: \"totalFormatted\"\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Layout>\r\n                <HeaderComponent defaultSelectedKeys={4} />\r\n                <Content>\r\n                    <Table \r\n                        className=\"transaction-page__table\"\r\n                        columns={transactionColumns} \r\n                        dataSource={this.state.transactionData} \r\n                        loading={this.state.isLoading}\r\n                        rowKey=\"id\"\r\n                    />\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Layout } from \"antd\"\r\n\r\nimport HeaderComponent from \"../../components/customer/HeaderComponent\"\r\nimport \"./styles/order_page.css\"\r\n\r\nconst { Content } = Layout\r\n\r\nclass OrderPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            orderList: [\r\n                {\r\n                    id: \"#121\",\r\n                    name: \"Computer\",\r\n                    date: \"August 12, 2020\",\r\n                    price: \"10000\",\r\n                    status: \"succeeded\"\r\n                },\r\n                {\r\n                    id: \"#122\",\r\n                    name: \"Laptop\",\r\n                    date: \"August 13, 2020\",\r\n                    price: \"20000\",\r\n                    status: \"failed\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Layout>\r\n                <HeaderComponent defaultSelectedKeys={3} />\r\n                <Content>\r\n                    <h1>Order</h1>\r\n                    <ul className=\"order-list\">\r\n                        <li className=\"order-list__title\">\r\n                            <div>Order ID</div>\r\n                            <div>Product Name</div>\r\n                            <div>Date</div>\r\n                            <div>Price</div>\r\n                            <div>Status</div>\r\n                        </li>\r\n                        {\r\n                            this.state.orderList.map(order => \r\n                                <li key={order.id} className={\"order-list__item\"}>\r\n                                    <div>{order.id}</div>\r\n                                    <div>{order.name}</div>\r\n                                    <div>{order.date}</div>\r\n                                    <div>{order.price}</div>\r\n                                    <div \r\n                                        className={order.status === \"succeeded\" ? \"order-list__item--succeeded\" : \"order-list__item--failed\"}\r\n                                    >\r\n                                        {order.status}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderPage","import React from \"react\"\r\nimport { Button } from \"antd\"\r\n\r\nimport \"./styles/cart_list.css\"\r\n\r\nexport default function CartList(props) {\r\n    const cartItems = props.cartList.map(product => {\r\n        if (product.quantity > 0) {\r\n            return (\r\n                <li key={product.id} className={\"cart-list__item\"}>\r\n                    <div>{product.name}</div>\r\n                    <div>{product.merchantName}</div>\r\n                    <div>{product.price}</div>\r\n                    <div>{product.quantity}</div>\r\n                    <Button\r\n                        onClick={() => props.onRemoveFromCart(product.id)}\r\n                    >\r\n                        Remove from Cart\r\n                    </Button>\r\n                </li>\r\n            )\r\n        } else return null\r\n    })\r\n\r\n    return (\r\n        <ul className=\"cart-list\">\r\n            <li className=\"cart-list__title\">\r\n                <div>Product Name</div>\r\n                <div>Merchant Name</div>\r\n                <div>Price</div>\r\n                <div>Quantity</div>\r\n            </li>\r\n            {cartItems}\r\n        </ul>\r\n    )\r\n}","import Axios from \"axios\"\r\n\r\nclass BankApi {\r\n    apiURL = process.env.REACT_APP_URL_API_BANK\r\n\r\n    handleGetBanks() {\r\n        return Axios.get(`${this.apiURL}/banks`)\r\n    }\r\n}\r\n\r\nexport default new BankApi()","import React, { Component } from \"react\"\r\nimport { Form, Input, Select, Spin } from \"antd\"\r\nimport BankApi from \"../../apis/BankApi\"\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16\r\n    }\r\n}\r\n\r\nconst { Option } = Select\r\n\r\nexport default class PaymentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoadingBank: true,\r\n            bankList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetBanks()\r\n    }\r\n\r\n    handleGetBanks() {\r\n        BankApi.handleGetBanks()\r\n            .then(banks => {\r\n                this.setState({\r\n                    isLoadingBank: false,\r\n                    bankList: banks.data.data\r\n                })\r\n            })\r\n            .catch(err => console.log(\"Error in fetching bank\", err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.isLoadingBank\r\n                ? <Spin size=\"large\" />\r\n                : (\r\n                    <Form\r\n                        ref={this.props.reference}\r\n                        {...layout}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Bank Name\"\r\n                            name=\"bankName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your bank name\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"Select your bank name\"\r\n                            >\r\n                                {\r\n                                    this.state.bankList.map(bank =>\r\n                                        <Option value={bank.id} key={bank.id}>{bank.name}</Option>\r\n                                    )\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Account\"\r\n                            name=\"bankAccount\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your bank account number\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Layout, Modal, notification, Button, message } from \"antd\"\r\n\r\nimport HeaderComponent from \"../../components/customer/HeaderComponent\"\r\nimport CartList from \"../../components/customer/CartList\"\r\nimport \"./styles/cart_page.css\"\r\nimport PaymentForm from \"../../components/customer/PaymentForm\"\r\n\r\nconst { Content } = Layout\r\n\r\nclass CartPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cart: [\r\n                {\r\n                    id: \"1\",\r\n                    name: \"Product 1\",\r\n                    price: 1000,\r\n                    merchantName: \"Merchant 1\",\r\n                    quantity: 2\r\n                },\r\n                {\r\n                    id: \"2\",\r\n                    name: \"Product 2\",\r\n                    price: 2000,\r\n                    merchantName: \"Merchant 2\",\r\n                    quantity: 1\r\n                }\r\n            ],\r\n            removeItemModal: {\r\n                isVisible: false,\r\n                productId: null\r\n            },\r\n            payModal: {\r\n                isVisible: false\r\n            }\r\n        }\r\n        this.paymentModalRef = React.createRef()\r\n    }\r\n\r\n    handleOpenRemoveModal(productId) {\r\n        this.setState({\r\n            removeItemModal: {\r\n                isVisible: true,\r\n                productId: productId\r\n            }\r\n        })\r\n    }\r\n\r\n    handleOpenPayModal() {\r\n        if (this.state.cart.length === 0) {\r\n            message.error(\"Your cart is empty\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            payModal: {\r\n                isVisible: true\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClosePayModal() {\r\n        this.setState({\r\n            payModal: {\r\n                isVisible: false\r\n            }\r\n        })\r\n    }\r\n\r\n    handleRemoveFromCart() {\r\n        const productId = this.state.removeItemModal.productId\r\n        let newCartState = this.state.cart.filter(product => product.id !== productId)\r\n        this.setState({\r\n            cart: newCartState,\r\n            removeItemModal: {\r\n                isVisible: false,\r\n                productId: null\r\n            }\r\n        })\r\n        notification.success({\r\n            message: \"Product successfully removed\",\r\n            duration: 1.5\r\n        })\r\n    }\r\n\r\n    calculatePaymentAmount() {\r\n        if (this.state.cart.length === 0) \r\n            return 0\r\n            \r\n        return this.state.cart.map(product =>\r\n            product.price * product.quantity\r\n        ).reduce((acc, price) =>\r\n            acc + price\r\n        )\r\n    }\r\n\r\n    handleMakePayment() {\r\n        this.paymentModalRef.current\r\n            .validateFields()\r\n            .then(values => {\r\n                console.log(values)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n        const totalProductPrice = this.calculatePaymentAmount()\r\n        this.setState({\r\n            cart: [],\r\n            payModal: {\r\n                isVisible: false\r\n            }\r\n        })\r\n        notification.success({\r\n            message: \"Payment succeeded\",\r\n            duration: 1.5\r\n        })\r\n        console.log(totalProductPrice)\r\n    }\r\n\r\n    render() {\r\n        const paymentModalFooter = [\r\n            <div key=\"paymentAmount\">{`Total payment: $${this.calculatePaymentAmount()}`}</div>,\r\n            <Button className=\"modal-footer--right-aligned\" key=\"back\" onClick={() => this.handleClosePayModal()}>Cancel</Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={() => this.handleMakePayment()}>Pay</Button>\r\n        ]\r\n        return (\r\n            <Layout className=\"cart-page\">\r\n                <HeaderComponent defaultSelectedKeys={5} />\r\n                <Modal\r\n                    title=\"Remove product from cart?\"\r\n                    visible={this.state.removeItemModal.isVisible}\r\n                    centered\r\n                    onOk={() => this.handleRemoveFromCart()}\r\n                    onCancel={() => this.setState({ removeItemModal: { isVisible: false, productId: null }})}\r\n                >\r\n                    <p>This product will be removed from cart</p>\r\n                </Modal>\r\n                    \r\n                <Modal\r\n                    title=\"Pay for products\"\r\n                    visible={this.state.payModal.isVisible}\r\n                    centered\r\n                    onOk={() => this.handleMakePayment()}\r\n                    onCancel={() => this.handleClosePayModal()}\r\n                    footer={paymentModalFooter}\r\n                >\r\n                    <PaymentForm reference={this.paymentModalRef}/>\r\n                </Modal>\r\n\r\n                <Content>\r\n                    <h1>My Cart</h1>\r\n                        <CartList \r\n                            cartList={this.state.cart} \r\n                            onRemoveFromCart={(productId) => this.handleOpenRemoveModal(productId)}\r\n                        />\r\n                </Content>\r\n                <Button \r\n                    className=\"cart-page__fab\"\r\n                    onClick={() => this.handleOpenPayModal()}\r\n                > \r\n                    Make Payment\r\n                </Button>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartPage","import React, { Component } from \"react\"\r\nimport { Layout, Card, Table, Button } from \"antd\"\r\n\r\nimport HeaderComponent from \"../../components/customer/HeaderComponent\"\r\nimport UserApi from \"../../apis/UserApi\"\r\nimport ItemApi from \"../../apis/ItemApi\"\r\n\r\nimport \"./styles/merchant_page.css\"\r\n\r\nconst { Content, Sider } = Layout\r\n\r\nexport default class MerchantPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            merchantId: this.props.location.state.id,\r\n            merchantInfo: {},\r\n            merchantProducts: [],\r\n            isLoadingMerchantInfo: true,\r\n            isLoadingMerchantProducts: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetMerchantInfo()\r\n        this.handleGetMerchantProducts()\r\n    }\r\n\r\n    handleGetMerchantInfo() {\r\n        UserApi.handleGetUserInfo(this.state.merchantId)\r\n            .then(merchantInfo => {\r\n                this.setState({\r\n                    merchantInfo: merchantInfo.data,\r\n                    isLoadingMerchantProducts: false\r\n                })\r\n            })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    handleGetMerchantProducts() {\r\n        ItemApi.handleGetItemsByMerchant(this.state.merchantId)\r\n            .then(merchantProducts => {\r\n                this.setState({\r\n                    merchantProducts: merchantProducts.data.data,\r\n                    isLoadingMerchantProducts: false\r\n                })\r\n            })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    handleAddToCart(productId) {\r\n        console.log(productId)\r\n    }\r\n\r\n    render() {\r\n        const productColumns = [\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                key: \"name\"\r\n            },\r\n            {\r\n                title: \"Description\",\r\n                dataIndex: \"description\",\r\n                key: \"description\"\r\n            },\r\n            {\r\n                title: \"Price\",\r\n                dataIndex: \"price\",\r\n                key: \"price\"\r\n            },\r\n            {\r\n                title: \"Quantity\",\r\n                dataIndex: \"quantity\",\r\n                key: \"quantity\"\r\n            },\r\n            {\r\n                title: \"Category\",\r\n                dataIndex: \"category\",\r\n                key: \"category\"\r\n            },\r\n            {\r\n                title: \"Action\",\r\n                dataIndex: \"action\",\r\n                render: (text, record) => (\r\n                    <Button \r\n                        type=\"link\"\r\n                        key=\"add\"\r\n                        onClick={() => this.handleAddToCart(record.id)}\r\n                    >\r\n                        Add to Cart\r\n                    </Button>\r\n                )\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Layout className=\"merchant-page\">\r\n                <HeaderComponent />\r\n                <Layout className=\"merchant-page__content\">\r\n                    <Sider className=\"merchant-page__info\">\r\n                        <Card>\r\n                            <h1 className=\"merchant-page__info__title\">Merchant Info</h1>\r\n                            <p>\r\n                                <span className=\"merchant-page__info__label\">Username:</span>\r\n                                {this.state.merchantInfo.username}\r\n                            </p>\r\n                            <p>\r\n                                <span className=\"merchant-page__info__label\">Name:</span>\r\n                                {this.state.merchantInfo.name}\r\n                            </p>\r\n                            <p>\r\n                                <span className=\"merchant-page__info__label\">Email:</span>\r\n                                {this.state.merchantInfo.email}\r\n                            </p>\r\n                        </Card>\r\n                    </Sider>\r\n                    <Content>\r\n                        <Table \r\n                            columns={productColumns} \r\n                            dataSource={this.state.merchantProducts} \r\n                            loading={this.state.isLoadingMerchantProducts}\r\n                            rowKey=\"id\"\r\n                        />\r\n                    </Content>  \r\n                </Layout>             \r\n            </Layout>\r\n        )\r\n    }\r\n}","import HomePage from \"../pages/customer/HomePage\"\r\nimport ProfilePage from \"../pages/customer/ProfilePage\"\r\nimport TransactionPage from \"../pages/customer/TransactionPage\"\r\nimport OrderPage from \"../pages/customer/OrderPage\"\r\nimport CartPage from \"../pages/customer/CartPage\"\r\n\r\nimport MerchantPage from \"../pages/customer/MerchantPage\"\r\n\r\nexport default [\r\n    { path: \"/customer/home\", component: HomePage },\r\n    { path: \"/customer/profile\", component: ProfilePage },\r\n    { path: \"/customer/order\", component: OrderPage },\r\n    { path: \"/customer/transaction\", component: TransactionPage },\r\n    { path: \"/customer/cart\", component: CartPage },\r\n    { path: \"/customer/merchant\", component: MerchantPage }\r\n]","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withRouter } from \"react-router\"\r\nimport { Layout, Menu, Popconfirm, message } from \"antd\"\r\n\r\nimport AuthSession from \"../../services/AuthSession\"\r\n\r\nconst { Header } = Layout\r\n\r\nclass HeaderComponent extends Component {\r\n    static propTypes = {\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    handleHomeMenuClick() {\r\n        this.props.history.push(\"/merchant/home\")\r\n    }\r\n\r\n    handleProfileMenuClick() {\r\n        this.props.history.push(\"/merchant/profile\")\r\n    }\r\n\r\n    handleWalletMenuClick() {\r\n        this.props.history.push(\"/merchant/wallet\")\r\n    }\r\n\r\n    handleRequestMenuClick() {\r\n        this.props.history.push(\"/merchant/request\")\r\n    }\r\n\r\n    handleLogout() {\r\n        message.info(\"Logged out\")\r\n        AuthSession.handleLogout()\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <div className=\"logo\" />\r\n    \r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[`${this.props.defaultSelectedKeys}`]}>\r\n                    <Menu.Item \r\n                        key=\"1\"\r\n                        onClick={this.handleHomeMenuClick.bind(this)}\r\n                    >\r\n                        Home\r\n                    </Menu.Item>\r\n                    <Menu.Item \r\n                        key=\"2\"\r\n                        onClick={this.handleProfileMenuClick.bind(this)}\r\n                    >\r\n                        Profile\r\n                    </Menu.Item>\r\n                    <Menu.Item \r\n                        key=\"3\"\r\n                        onClick={this.handleWalletMenuClick.bind(this)}\r\n                    >\r\n                        Wallet\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        key=\"4\"\r\n                        onClick={this.handleRequestMenuClick.bind(this)}\r\n                    >\r\n                        Request\r\n                    </Menu.Item>\r\n\r\n                    <div className=\"menu__item--right-margined menu__item--not-selectable\">\r\n                        <Popconfirm \r\n                            placement=\"bottomRight\"\r\n                            title=\"Are you sure you want to logout?\"\r\n                            onConfirm={() => this.handleLogout()}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <img src={process.env.PUBLIC_URL + \"/images/logout.png\"} alt=\"Logout\" />\r\n                        </Popconfirm>\r\n                    </div>\r\n                </Menu>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderComponent)","import React, { Component } from \"react\"\r\nimport { Form, Input, InputNumber } from \"antd\"\r\n\r\nimport \"./styles/add_product_form.css\"\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16\r\n    }\r\n}\r\n\r\nexport default class AddProductForm extends Component {\r\n    render() {\r\n        return (\r\n            <Form {...layout} ref={this.props.reference}>\r\n                <Form.Item\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your product name\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Price\"\r\n                    name=\"price\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your product price\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <InputNumber \r\n                        min={0} \r\n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Quantity\"\r\n                    name=\"quantity\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your product quantity\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <InputNumber min={0} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your product description\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Category\"\r\n                    name=\"category\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your product category\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Button, Modal, notification } from \"antd\"\r\n\r\nimport \"./styles/add_product_component.css\"\r\nimport AddProductForm from \"./AddProductForm\"\r\nimport AuthSession from \"../../services/AuthSession\"\r\nimport ItemApi from \"../../apis/ItemApi\"\r\n\r\nexport default class AddProductComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            addModal: {\r\n                isVisible: false,\r\n                isLoading: false\r\n            }\r\n        }\r\n        this.addProductRef = React.createRef()\r\n    }\r\n\r\n    handleOpenAddModal() {\r\n        this.setState({\r\n            addModal: {\r\n                isVisible: true\r\n            }\r\n        })\r\n    }\r\n\r\n    handleCloseAddModal() {\r\n        this.setState({\r\n            addModal: {\r\n                isVisible: false\r\n            }\r\n        })\r\n        this.addProductRef.current.resetFields()\r\n    }\r\n\r\n    handleAddProduct() {\r\n        this.addProductRef.current\r\n            .validateFields()\r\n            .then(values => {\r\n                this.handleCloseAddModal()\r\n\r\n                const itemInfo = Object.assign({}, values)\r\n                itemInfo[\"merchant_id\"] = AuthSession.getUserId()\r\n                ItemApi.handleAddItem(itemInfo)\r\n                    .then(res => {\r\n                        notification.success({\r\n                            message: \"Product added\",\r\n                            duration: 1.5\r\n                        })\r\n                        this.props.onAddProduct()\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                notification.error({\r\n                    message: \"Product add failed\",\r\n                    duration: 1.5\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const addProductFooter = [\r\n            <Button className=\"modal-footer--right-aligned\" key=\"back\" onClick={this.handleCloseAddModal.bind(this)}>Cancel</Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={this.handleAddProduct.bind(this)}>Add</Button>\r\n        ]\r\n        \r\n        return (\r\n            <div className=\"add-product\">\r\n                <Modal\r\n                    title=\"Add a Product\"\r\n                    visible={this.state.addModal.isVisible}\r\n                    centered\r\n                    onOk={this.handleAddProduct.bind(this)}\r\n                    onCancel={this.handleCloseAddModal.bind(this)}\r\n                    footer={addProductFooter}\r\n                >\r\n                    <AddProductForm reference={this.addProductRef}/>\r\n                </Modal>\r\n\r\n                <Button \r\n                    className=\"add-product__fab\"\r\n                    onClick={this.handleOpenAddModal.bind(this)}\r\n                > \r\n                    Add\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Form, Input, InputNumber, Spin } from \"antd\"\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16\r\n    }\r\n}\r\n\r\nexport default class EditProductForm extends Component {\r\n    render() {\r\n        return (\r\n            this.props.loading\r\n                ? <Spin size=\"large\" />\r\n                : (\r\n                    <Form \r\n                        {...layout} \r\n                        ref={this.props.reference}\r\n                        initialValues={this.props.info}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"ID\"\r\n                            name=\"id\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your product id\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input disabled />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your product name\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Price\"\r\n                            name=\"price\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your product price\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <InputNumber \r\n                                min={0} \r\n                                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Quantity\"\r\n                            name=\"quantity\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your product quantity\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <InputNumber min={1} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Description\"\r\n                            name=\"description\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your product description\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Category\"\r\n                            name=\"category\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your product category\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Table, Button, Popconfirm, Space, notification } from \"antd\"\r\nimport EditProductForm from \"./EditProductForm\"\r\nimport ItemApi from \"../../apis/ItemApi\"\r\nimport Modal from \"antd/lib/modal/Modal\"\r\n\r\nexport default class ProductList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editModal: {\r\n                isVisible: false,\r\n                isLoading: false,\r\n                currentProductInfo: {}\r\n            }\r\n        }\r\n        this.editProductFormRef = React.createRef()\r\n    }\r\n\r\n    handleOpenEditModal(productId) {\r\n        this.setState({\r\n            editModal: {\r\n                isVisible: true,\r\n                isLoading: true\r\n            }\r\n        })\r\n\r\n        ItemApi.handleGetItem(productId)\r\n            .then(productInfo => {\r\n                if (productInfo.data.data === null) return Promise.reject(\"Product not found\")\r\n                this.setState({\r\n                    editModal: {\r\n                        isVisible: true,\r\n                        isLoading: false,\r\n                        currentProductInfo: productInfo.data.data\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                this.setState({\r\n                    editModal: {\r\n                        isVisible: false,\r\n                        isLoading: false,\r\n                        currentProductInfo: {}\r\n                    }\r\n                })\r\n                notification.error({\r\n                    message: \"Product not found\",\r\n                    duration: 1.5\r\n                })\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    editModal: {\r\n                        isVisible: true,\r\n                        isLoading: false,\r\n                        currentProductInfo: this.state.editModal.current\r\n                    }\r\n                })\r\n            })\r\n    }\r\n\r\n    handleCloseEditModal() {\r\n        this.setState({\r\n            editModal: {\r\n                isVisible: false,\r\n                isLoading: false,\r\n                currentProductInfo: {}\r\n            }\r\n        })\r\n    }\r\n\r\n    handleEditProduct() {\r\n        this.handleCloseEditModal()\r\n        this.editProductFormRef.current\r\n            .validateFields()\r\n            .then(values => {\r\n                this.props.onEditProduct(values)\r\n            })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    render() {\r\n        const transactionColumns = [\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                key: \"name\"\r\n            },\r\n            {\r\n                title: \"Description\",\r\n                dataIndex: \"description\",\r\n                key: \"description\"\r\n            },\r\n            {\r\n                title: \"Price\",\r\n                dataIndex: \"price\",\r\n                key: \"price\"\r\n            },\r\n            {\r\n                title: \"Quantity\",\r\n                dataIndex: \"quantity\",\r\n                key: \"quantity\"\r\n            },\r\n            {\r\n                title: \"Category\",\r\n                dataIndex: \"category\",\r\n                key: \"category\"\r\n            },\r\n            {\r\n                title: \"Action\",\r\n                dataIndex: \"action\",\r\n                render: (text, record) => (\r\n                    <Space size=\"middle\">\r\n                        <Button \r\n                            type=\"link\" \r\n                            key=\"edit\"\r\n                            onClick={this.handleOpenEditModal.bind(this, record.id)}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Popconfirm\r\n                            placement=\"bottom\"\r\n                            title=\"Are you sure you want to delete this product?\"\r\n                            onConfirm={() => this.props.onDeleteProduct(record.id)}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                            key=\"delete\"\r\n                        >\r\n                            <Button type=\"link\">Delete</Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        ]\r\n\r\n        const editProductFooter = [\r\n            <Button \r\n                className=\"modal-footer--right-aligned\" \r\n                key=\"back\" \r\n                onClick={this.handleCloseEditModal.bind(this)}\r\n            >\r\n                Cancel\r\n            </Button>,\r\n            <Button \r\n                key=\"submit\" \r\n                type=\"primary\" \r\n                onClick={this.handleEditProduct.bind(this)}\r\n            >\r\n                Edit\r\n            </Button>\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <Table \r\n                    columns={transactionColumns} \r\n                    dataSource={this.props.list} \r\n                    loading={this.props.loading}\r\n                    rowKey=\"id\"\r\n                />\r\n\r\n                <Modal\r\n                    title=\"Edit a product\"\r\n                    visible={this.state.editModal.isVisible}\r\n                    centered\r\n                    onOk={this.handleEditProduct.bind(this)}\r\n                    onCancel={this.handleCloseEditModal.bind(this)}\r\n                    footer={editProductFooter}\r\n                >\r\n                    <EditProductForm \r\n                        reference={this.editProductFormRef} \r\n                        loading={this.state.editModal.isLoading}    \r\n                        info={this.state.editModal.currentProductInfo}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component }  from \"react\"\r\nimport { Layout, notification } from \"antd\"\r\n\r\nimport HeaderComponent from \"../../components/merchant/HeaderComponent\"\r\nimport AddProductComponent from \"../../components/merchant/AddProductComponent\"\r\nimport ItemApi from \"../../apis/ItemApi\"\r\nimport AuthSession from \"../../services/AuthSession\"\r\nimport ProductList from \"../../components/merchant/ProductList\"\r\n\r\nconst { Content } = Layout\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoadingProduct: true,\r\n            productList: [],\r\n            merchantId: AuthSession.getUserId()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetItems()\r\n    }\r\n\r\n    handleGetItems() {\r\n        this.setState({ isLoadingProduct: true })\r\n        ItemApi.handleGetItemsByMerchant(this.state.merchantId)\r\n            .then(res => {\r\n                this.setState({ isLoadingProduct: false })\r\n                this.setState({\r\n                    productList: res.data.data ? res.data.data : []\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n    handleEditItem(newItemInfo) {\r\n        this.setState({ isLoadingProduct: true })\r\n        ItemApi.handleUpdateItem(newItemInfo)\r\n            .then(res => {\r\n                notification.success({\r\n                    message: \"Product has been updated\",\r\n                    duration: 1.5\r\n                })\r\n            })\r\n            .catch(err => {\r\n                notification.error({\r\n                    message: \"Product update failed\",\r\n                    duration: 1.5\r\n                })\r\n            })\r\n            .finally(this.handleGetItems.bind(this))\r\n    }\r\n\r\n    handleDeleteItem(itemId) {\r\n        this.setState({ isLoadingProduct: true })\r\n        ItemApi.handleDeleteItem(itemId)\r\n            .then(res => {\r\n                notification.success({\r\n                    message: \"Product has been deleted\",\r\n                    duration: 1.5\r\n                })\r\n            })\r\n            .catch(err => {\r\n                notification.error({\r\n                    message: \"Product deletion failed\",\r\n                    duration: 1.5\r\n                })\r\n            })\r\n            .finally(this.handleGetItems.bind(this))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"home-page\">\r\n                <HeaderComponent defaultSelectedKeys={1} />\r\n                <Content>\r\n                    <AddProductComponent onAddProduct={this.handleGetItems.bind(this)} />\r\n                    <ProductList \r\n                        list={this.state.productList} \r\n                        loading={this.state.isLoadingProduct}\r\n                        onDeleteProduct={this.handleDeleteItem.bind(this)}\r\n                        onEditProduct={this.handleEditItem.bind(this)}\r\n                    />\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Layout } from \"antd\"\r\n\r\nimport HeaderComponent from \"../../components/merchant/HeaderComponent\"\r\nimport ProfileUpdateForm from \"../../components/ProfileUpdateForm\"\r\n\r\nconst { Content } = Layout\r\n\r\nexport default class ProfilePage extends Component {\r\n    render() {\r\n        return(\r\n            <Layout>\r\n                <HeaderComponent defaultSelectedKeys={2} />\r\n                <Content>\r\n                    <ProfileUpdateForm />\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Layout, Table } from \"antd\"\r\nimport HeaderComponent from \"../../components/merchant/HeaderComponent\"\r\n\r\nimport \"./styles/wallet_page.css\"\r\n\r\nconst { Content } = Layout\r\n\r\nexport default class WalletPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: true,\r\n            walletData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetWalletData()\r\n    }\r\n\r\n    handleGetWalletData() {\r\n        const formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isLoading: false,\r\n                walletData: [\r\n                    {\r\n                        date: \"Mon 25 Sep 2020\",\r\n                        customer: \"Michelle\",\r\n                        amountFormatted: formatter.format((150000).toFixed(0))\r\n                    },\r\n                    {\r\n                        date: \"Tue 26 Sep 2020\",\r\n                        customer: \"Vincent\",\r\n                        amountFormatted: formatter.format((1000000).toFixed(0))\r\n                    }\r\n                ]\r\n            })\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        const walletColumns = [\r\n            {\r\n                title: \"Date\",\r\n                dataIndex: \"date\",\r\n                key: \"date\"\r\n            },\r\n            {\r\n                title: \"Customer\",\r\n                dataIndex: \"customer\",\r\n                key: \"customer\"\r\n            },\r\n            {\r\n                title: \"Amount\",\r\n                dataIndex: \"amountFormatted\",\r\n                key: \"amountFormatted\"\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Layout>\r\n                <HeaderComponent defaultSelectedKeys={3} />\r\n                <Content>\r\n                    <Table \r\n                        className=\"wallet-page__table\"\r\n                        columns={walletColumns} \r\n                        dataSource={this.state.walletData} \r\n                        loading={this.state.isLoading}\r\n                        rowKey=\"id\"\r\n                    />\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Layout, Table } from \"antd\"\r\nimport HeaderComponent from \"../../components/merchant/HeaderComponent\"\r\n\r\nconst { Content } = Layout\r\n\r\nexport default class RequestPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: true,\r\n            requestData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetRequestData()\r\n    }\r\n\r\n    handleGetRequestData() {\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isLoading: false,\r\n                requestData: [\r\n                    {\r\n                        date: \"Mon 25 Sep 2020\",\r\n                        customer: \"Michelle\",\r\n                        product: \"Laptop\",\r\n                        quantity: 1\r\n                    },\r\n                    {\r\n                        date: \"Tue 26 Sep 2020\",\r\n                        customer: \"Vincent\",\r\n                        product: \"Camera\",\r\n                        quantity: 2\r\n                    }\r\n                ]\r\n            })\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        const requestColumns = [\r\n            {\r\n                title: \"Order Date\",\r\n                dataIndex: \"date\",\r\n                key: \"date\"\r\n            },\r\n            {\r\n                title: \"Customer\",\r\n                dataIndex: \"customer\",\r\n                key: \"customer\"\r\n            },\r\n            {\r\n                title: \"Product\",\r\n                dataIndex: \"product\",\r\n                key: \"product\"\r\n            },\r\n            {\r\n                title: \"Quantity\",\r\n                dataIndex: \"quantity\",\r\n                key: \"quantity\"\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <Layout>\r\n                <HeaderComponent defaultSelectedKeys={4} />\r\n                <Content>\r\n                    <Table \r\n                        columns={requestColumns} \r\n                        dataSource={this.state.requestData} \r\n                        loading={this.state.isLoading}\r\n                        rowKey=\"id\"\r\n                    />\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import HomePage from \"../pages/merchant/HomePage\"\r\nimport ProfilePage from \"../pages/merchant/ProfilePage\"\r\nimport WalletPage from \"../pages/merchant/WalletPage\"\r\nimport RequestPage from \"../pages/merchant/RequestPage\"\r\n\r\nexport default [\r\n    { path: \"/merchant/home\", component: HomePage },\r\n    { path: \"/merchant/profile\", component: ProfilePage},\r\n    { path: \"/merchant/wallet\", component: WalletPage },\r\n    { path: \"/merchant/request\", component: RequestPage }\r\n]","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withRouter } from \"react-router\"\r\nimport { message, Layout, Popconfirm, Menu } from \"antd\"\r\n\r\nimport AuthSession from \"../../services/AuthSession\"\r\nimport \"./styles/header_component.css\"\r\n\r\nconst { Header } = Layout\r\n\r\nclass HeaderComponent extends Component {\r\n    static propTypes = {\r\n        history: PropTypes.object.isRequired\r\n    }\r\n\r\n    handleHomeMenuClick() {\r\n        console.log(\"Home menu clicked\")\r\n        this.props.history.push(\"/admin/merchant\")\r\n    }\r\n\r\n    handleLogout() {\r\n        message.info(\"Logged out\")\r\n        AuthSession.handleLogout()\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <div className=\"logo\" />\r\n    \r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[`${this.props.defaultSelectedKeys}`]}>\r\n                    <Menu.Item \r\n                        key=\"1\"\r\n                        onClick={() => this.handleHomeMenuClick()}\r\n                    >\r\n                        Home\r\n                    </Menu.Item>\r\n\r\n                    <div className=\"menu__item--right-margined menu__item--not-selectable\">\r\n                        <Popconfirm \r\n                            placement=\"bottomRight\"\r\n                            title=\"Are you sure you want to logout?\"\r\n                            onConfirm={() => this.handleLogout()}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <img src={process.env.PUBLIC_URL + \"/images/logout.png\"} alt=\"Logout\" />\r\n                        </Popconfirm>\r\n                    </div>\r\n                </Menu>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderComponent)","import React, { Component } from \"react\"\r\nimport { Card, Modal } from \"antd\"\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons'\r\n\r\nimport UserApi from \"../../apis/UserApi\"\r\nimport \"./styles/merchant_approval_list.css\"\r\n\r\nexport default class MerchantApprovalList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoadingMerchantApproval: true,\r\n            inactiveMerchantsList: [],\r\n            acceptModal: {\r\n                isVisible: false,\r\n                merchantInfo: {}\r\n            },\r\n            rejectModal: {\r\n                isVisible: false,\r\n                merchantInfo: {}\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInactiveMerchantsInfo()\r\n    }\r\n\r\n    getInactiveMerchantsInfo() {\r\n        UserApi.handleGetUsers()\r\n            .then(usersData => {\r\n                const inactiveMerchantsList = usersData.data\r\n                    .filter(user => user.type === \"merchant\" && user.active === false)\r\n                \r\n                this.setState({\r\n                    isLoadingMerchantApproval: false,\r\n                    inactiveMerchantsList: inactiveMerchantsList\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    handleMerchantApproval(merchantInfo) {\r\n        const newMerchantInfo = Object.assign({}, merchantInfo)\r\n        newMerchantInfo.active = true\r\n\r\n        this.setState({\r\n            isLoadingMerchantApproval: true,\r\n            acceptModal: {\r\n                isVisible: false,\r\n                merchantInfo: {}\r\n            }\r\n        })\r\n\r\n        UserApi.handleApproveMerchant(newMerchantInfo)\r\n            .then(res => {\r\n                this.getInactiveMerchantsInfo()\r\n            })\r\n            .catch(err => {\r\n                console.err(err)\r\n            })\r\n    }\r\n\r\n    handleMerchantRejection(merchantInfo) {\r\n        this.setState({\r\n            isLoadingMerchantApproval: true,\r\n            rejectModal: {\r\n                isVisible: false,\r\n                merchantInfo: {}\r\n            }\r\n        })\r\n\r\n        UserApi.handleDeleteUser(merchantInfo.id)\r\n            .then(res => {\r\n                this.getInactiveMerchantsInfo()\r\n            })\r\n            .catch(err => {\r\n                console.err(err)\r\n            })\r\n    }\r\n\r\n    handleOpenAcceptModal(merchantInfo) {\r\n        this.setState({\r\n            acceptModal: {\r\n                isVisible: true,\r\n                merchantInfo: merchantInfo\r\n            }\r\n        })\r\n\r\n        console.log(merchantInfo)\r\n    }\r\n\r\n    handleOpenRejectModal(merchantInfo) {\r\n        this.setState({\r\n            rejectModal: {\r\n                isVisible: true,\r\n                merchantInfo: merchantInfo\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <Modal\r\n                    title=\"Accept merchant's registration?\"\r\n                    visible={this.state.acceptModal.isVisible}\r\n                    centered\r\n                    onOk={() => this.handleMerchantApproval(this.state.acceptModal.merchantInfo)}\r\n                    onCancel={() => this.setState({ acceptModal: { isVisible: false, merchantInfo: {} }})}\r\n                >\r\n                    <p>After accepting, merchant can login and can sell products</p>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    title=\"Reject merchant's registration?\"\r\n                    visible={this.state.rejectModal.isVisible}\r\n                    centered\r\n                    onOk={() => this.handleMerchantRejection(this.state.rejectModal.merchantInfo)}\r\n                    onCancel={() => this.setState({ rejectModal: { isVisible: false, merchantInfo: {} }})}\r\n                >\r\n                    <p>After rejecting, merchant's account will be deleted</p>\r\n                </Modal>\r\n\r\n                <h1>Merchants Awaiting Approval</h1>\r\n                {\r\n                    this.state.isLoadingMerchantApproval\r\n                        ? <Card loading={true} />\r\n                        : (\r\n                            <ul className=\"list\">\r\n                                {\r\n                                    this.state.inactiveMerchantsList.length === 0\r\n                                        ? <h2 className=\"list__text--empty\">No one is waiting for approval</h2>\r\n                                        : (\r\n                                            this.state.inactiveMerchantsList.map(merchant => \r\n                                                <Card\r\n                                                    key={merchant.id}\r\n                                                    className=\"list__card\"\r\n                                                    actions={[\r\n                                                        <CheckOutlined \r\n                                                            key=\"accept\" \r\n                                                            onClick={() => this.handleOpenAcceptModal(merchant)}    \r\n                                                        />,\r\n                                                        <CloseOutlined \r\n                                                            key=\"reject\" \r\n                                                            onClick={() => this.handleOpenRejectModal(merchant)}\r\n                                                        />\r\n                                                    ]}\r\n                                                >\r\n                                                    <p className=\"list__card__desc--right-aligned\">\r\n                                                        {\r\n                                                            (new Date(merchant.created_at.slice(0, -6))).toDateString()\r\n                                                        }\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <span className=\"list__card__label\">Username: </span>\r\n                                                        {`${merchant.username}`}\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <span className=\"list__card__label\">Name: </span>\r\n                                                        {`${merchant.name}`}\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <span className=\"list__card__label\">Email: </span>\r\n                                                        {`${merchant.email}`}\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <span className=\"list__card__label\">Gender: </span>\r\n                                                        {`${merchant.gender}`}\r\n                                                    </p>\r\n                                                </Card>\r\n                                            )\r\n                                        )\r\n                                }\r\n                            </ul>\r\n                        )\r\n                }    \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Table, Space, Popconfirm, Button } from \"antd\"\r\n\r\nexport default class TransactionApprovalList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoadingTransaction: true,\r\n            transactionData: [\r\n                {\r\n                    id: \"#123\",\r\n                    date: \"Jan 31, 2020\",\r\n                    product: \"RAM\",\r\n                    price: 150000,\r\n                    count: 2,\r\n                    total: 300000\r\n                },\r\n                {\r\n                    id: \"#11\",\r\n                    date: \"Jan 28, 2020\",\r\n                    product: \"Laptop\",\r\n                    price: 1000000,\r\n                    count: 1,\r\n                    total: 1000000\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTransactionData()\r\n    }\r\n\r\n    getTransactionData() {\r\n        this.setState({isLoadingTransaction: true})\r\n        setTimeout(() => {\r\n            this.setState({isLoadingTransaction: false})\r\n        }, 1500)\r\n    }\r\n\r\n    handleAcceptTransaction(transactionId) {\r\n        const newTransactionData = this.state.transactionData.filter(transaction => transaction.id !== transactionId)\r\n        this.setState({ transactionData: newTransactionData })\r\n        this.getTransactionData()\r\n    }\r\n\r\n    handleRejectTransaction(transactionId) {\r\n        const newTransactionData = this.state.transactionData.filter(transaction => transaction.id !== transactionId)\r\n        this.setState({ transactionData: newTransactionData })\r\n        this.getTransactionData()\r\n    }\r\n\r\n    render() {\r\n        const transactionColumns = [\r\n            {\r\n                title: \"ID\",\r\n                dataIndex: \"id\",\r\n                key: \"id\"\r\n            },\r\n            {\r\n                title: \"Date\",\r\n                dataIndex: \"date\",\r\n                key: \"date\"\r\n            },\r\n            {\r\n                title: \"Product\",\r\n                dataIndex: \"product\",\r\n                key: \"product\"\r\n            },\r\n            {\r\n                title: \"Price\",\r\n                dataIndex: \"price\",\r\n                key: \"price\"\r\n            },\r\n            {\r\n                title: \"Count\",\r\n                dataIndex: \"count\",\r\n                key: \"count\"\r\n            },\r\n            {\r\n                title: \"Total\",\r\n                dataIndex: \"total\",\r\n                key: \"total\"\r\n            },\r\n            {\r\n                title: \"Action\",\r\n                dataIndex: \"action\",\r\n                render: (text, record) => (\r\n                    <Space size=\"middle\">\r\n                        <Popconfirm\r\n                            placement=\"bottom\"\r\n                            title=\"Are you sure you want to accept this transaction?\"\r\n                            onConfirm={() => this.handleAcceptTransaction(record.id)}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"link\">Accept</Button>\r\n                        </Popconfirm>\r\n                        <Popconfirm\r\n                            placement=\"bottom\"\r\n                            title=\"Are you sure you want to reject this transaction?\"\r\n                            onConfirm={() => this.handleRejectTransaction(record.id)}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"link\">Reject</Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <h1>Transactions Awaiting Approval</h1>\r\n                {\r\n                    <Table \r\n                        columns={transactionColumns} \r\n                        dataSource={this.state.transactionData} \r\n                        loading={this.state.isLoadingTransaction}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Layout } from \"antd\"\r\n\r\nimport HeaderComponent from \"../../components/admin/HeaderComponent\"\r\nimport MerchantApprovalList from \"../../components/admin/MerchantApprovalList\"\r\nimport TransactionApprovalList from \"../../components/admin/TransactionApprovalList\"\r\nimport \"./styles/home_page.css\"\r\n\r\nconst { Content } = Layout\r\n\r\nexport default class HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <Layout className=\"home-page\">\r\n                <HeaderComponent defaultSelectedKeys={1} />                \r\n                <Content>\r\n                    <MerchantApprovalList className=\"home-page__merchant-approval-list\" />\r\n                    <TransactionApprovalList />\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import HomePage from \"../pages/admin/HomePage\"\r\n\r\nexport default [\r\n    { path: \"/admin/home\", component: HomePage }\r\n]","import React from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nexport default function NotFoundRoute(props) {\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    )\r\n}","import React, { Component } from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\n\r\nimport LandingPage from \"../pages/LandingPage\"\r\nimport PrivateRoute from \"./PrivateRoute\"\r\nimport AuthSession from \"../services/AuthSession\"\r\nimport CustomerRoute from \"./CustomerRoute\"\r\nimport MerchantRoute from \"./MerchantRoute\"\r\nimport AdminRoute from \"./AdminRoute\"\r\nimport NotFoundRoute from \"./NotFoundRoute\"\r\n\r\nexport default class RootRoute extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            router: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const routeType = AuthSession.getUserType()\r\n        let router = null\r\n        if (routeType === \"customer\") router = CustomerRoute\r\n        else if (routeType === \"merchant\") router = MerchantRoute\r\n        else if (routeType === \"admin\") router = AdminRoute\r\n        this.setState({\r\n            router: router\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={LandingPage} />\r\n                    { CustomerRoute.map(props => <PrivateRoute {...props} key={props.path} />) }\r\n                    { MerchantRoute.map(props => <PrivateRoute {...props} key={props.path} />) }\r\n                    { AdminRoute.map(props => <PrivateRoute {...props} key={props.path} />) }\r\n                    <Route component={NotFoundRoute} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport RootRoute from \"./routes/RootRoute\"\r\n\r\nimport \"./App.css\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <RootRoute />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App className=\"root\"/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}